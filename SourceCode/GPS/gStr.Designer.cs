//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgOpenGPS {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class gStr {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal gStr() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AgOpenGPS.gStr", typeof(gStr).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AB Curve.
        /// </summary>
        public static string gsABCurve {
            get {
                return ResourceManager.GetString("gsABCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AB Line.
        /// </summary>
        public static string gsABline {
            get {
                return ResourceManager.GetString("gsABline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About....
        /// </summary>
        public static string gsAbout {
            get {
                return ResourceManager.GetString("gsAbout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action Has Been Cancelled.
        /// </summary>
        public static string gsActionHasBeenCancelled {
            get {
                return ResourceManager.GetString("gsActionHasBeenCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual.
        /// </summary>
        public static string gsActual {
            get {
                return ResourceManager.GetString("gsActual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Agressiveness.
        /// </summary>
        public static string gsAgressiveness {
            get {
                return ResourceManager.GetString("gsAgressiveness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Area.
        /// </summary>
        public static string gsArea {
            get {
                return ResourceManager.GetString("gsArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure ?.
        /// </summary>
        public static string gsAreYouSure {
            get {
                return ResourceManager.GetString("gsAreYouSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Steer Configuration.
        /// </summary>
        public static string gsAutoSteerConfiguration {
            get {
                return ResourceManager.GetString("gsAutoSteerConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoSteer Port.
        /// </summary>
        public static string gsAutoSteerPort {
            get {
                return ResourceManager.GetString("gsAutoSteerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Based on Field:.
        /// </summary>
        public static string gsBasedOnField {
            get {
                return ResourceManager.GetString("gsBasedOnField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boundary.
        /// </summary>
        public static string gsBoundary {
            get {
                return ResourceManager.GetString("gsBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boundary Lines File Corrupt.
        /// </summary>
        public static string gsBoundaryLineFilesAreCorrupt {
            get {
                return ResourceManager.GetString("gsBoundaryLineFilesAreCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to But Field Is Loaded.
        /// </summary>
        public static string gsButFieldIsLoaded {
            get {
                return ResourceManager.GetString("gsButFieldIsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Centimeter.
        /// </summary>
        public static string gsCentimeters {
            get {
                return ResourceManager.GetString("gsCentimeters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a different field.
        /// </summary>
        public static string gsChooseADifferentField {
            get {
                return ResourceManager.GetString("gsChooseADifferentField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a different name.
        /// </summary>
        public static string gsChooseADifferentName {
            get {
                return ResourceManager.GetString("gsChooseADifferentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose or Build a Different one.
        /// </summary>
        public static string gsChooseBuildDifferentone {
            get {
                return ResourceManager.GetString("gsChooseBuildDifferentone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Field First.
        /// </summary>
        public static string gsCloseFieldFirst {
            get {
                return ResourceManager.GetString("gsCloseFieldFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Colors.
        /// </summary>
        public static string gsColors {
            get {
                return ResourceManager.GetString("gsColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completely Delete Boundary.
        /// </summary>
        public static string gsCompletelyDeleteBoundary {
            get {
                return ResourceManager.GetString("gsCompletelyDeleteBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contour File Corrupt.
        /// </summary>
        public static string gsContourFileIsCorrupt {
            get {
                return ResourceManager.GetString("gsContourFileIsCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contour On.
        /// </summary>
        public static string gsContourOn {
            get {
                return ResourceManager.GetString("gsContourOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Valid Path.
        /// </summary>
        public static string gsCouldntGenerateValidPath {
            get {
                return ResourceManager.GetString("gsCouldntGenerateValidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create A Boundary First.
        /// </summary>
        public static string gsCreateABoundaryFirst {
            get {
                return ResourceManager.GetString("gsCreateABoundaryFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create New Field.
        /// </summary>
        public static string gsCreateNewField {
            get {
                return ResourceManager.GetString("gsCreateNewField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current (A).
        /// </summary>
        public static string gsCurrent {
            get {
                return ResourceManager.GetString("gsCurrent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current (A).
        /// </summary>
        public static string gsCurrentSensorValueLabel {
            get {
                return ResourceManager.GetString("gsCurrentSensorValueLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curve Line File Corrupt.
        /// </summary>
        public static string gsCurveLineFileIsCorrupt {
            get {
                return ResourceManager.GetString("gsCurveLineFileIsCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curve Not ON.
        /// </summary>
        public static string gsCurveNotOn {
            get {
                return ResourceManager.GetString("gsCurveNotOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete All Sections And Contours.
        /// </summary>
        public static string gsDeleteAllContoursAndSections {
            get {
                return ResourceManager.GetString("gsDeleteAllContoursAndSections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Applied Area.
        /// </summary>
        public static string gsDeleteAppliedArea {
            get {
                return ResourceManager.GetString("gsDeleteAppliedArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Contour Paths.
        /// </summary>
        public static string gsDeleteContourPaths {
            get {
                return ResourceManager.GetString("gsDeleteContourPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete For Sure?.
        /// </summary>
        public static string gsDeleteForSure {
            get {
                return ResourceManager.GetString("gsDeleteForSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directories.
        /// </summary>
        public static string gsDirectories {
            get {
                return ResourceManager.GetString("gsDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory Exists.
        /// </summary>
        public static string gsDirectoryExists {
            get {
                return ResourceManager.GetString("gsDirectoryExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive Thru.
        /// </summary>
        public static string gsDriveThru {
            get {
                return ResourceManager.GetString("gsDriveThru", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Driving.
        /// </summary>
        public static string gsDriving {
            get {
                return ResourceManager.GetString("gsDriving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to East.
        /// </summary>
        public static string gsEast {
            get {
                return ResourceManager.GetString("gsEast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit AB Curve.
        /// </summary>
        public static string gsEditABCurve {
            get {
                return ResourceManager.GetString("gsEditABCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit AB Line.
        /// </summary>
        public static string gsEditABLine {
            get {
                return ResourceManager.GetString("gsEditABLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counts.
        /// </summary>
        public static string gsEncoderCounts {
            get {
                return ResourceManager.GetString("gsEncoderCounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Coordinates For Simulator.
        /// </summary>
        public static string gsEnterCoordinatesForSimulator {
            get {
                return ResourceManager.GetString("gsEnterCoordinatesForSimulator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Field Name.
        /// </summary>
        public static string gsEnterFieldName {
            get {
                return ResourceManager.GetString("gsEnterFieldName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Sim Coords.
        /// </summary>
        public static string gsEnterSimCoords {
            get {
                return ResourceManager.GetString("gsEnterSimCoords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string gsError {
            get {
                return ResourceManager.GetString("gsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading KML.
        /// </summary>
        public static string gsErrorreadingKML {
            get {
                return ResourceManager.GetString("gsErrorreadingKML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field File is Corrupt.
        /// </summary>
        public static string gsFieldFileIsCorrupt {
            get {
                return ResourceManager.GetString("gsFieldFileIsCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field Is Open.
        /// </summary>
        public static string gsFieldIsOpen {
            get {
                return ResourceManager.GetString("gsFieldIsOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field Not Open.
        /// </summary>
        public static string gsFieldNotOpen {
            get {
                return ResourceManager.GetString("gsFieldNotOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Error.
        /// </summary>
        public static string gsFileError {
            get {
                return ResourceManager.GetString("gsFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flag File Corrupt.
        /// </summary>
        public static string gsFlagFileIsCorrupt {
            get {
                return ResourceManager.GetString("gsFlagFileIsCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For Now.
        /// </summary>
        public static string gsForNow {
            get {
                return ResourceManager.GetString("gsForNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headland.
        /// </summary>
        public static string gsHeadland {
            get {
                return ResourceManager.GetString("gsHeadland", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create and Edit Headland.
        /// </summary>
        public static string gsHeadlandForm {
            get {
                return ResourceManager.GetString("gsHeadlandForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string gsHelp {
            get {
                return ResourceManager.GetString("gsHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inch.
        /// </summary>
        public static string gsInches {
            get {
                return ResourceManager.GetString("gsInches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inner.
        /// </summary>
        public static string gsInner {
            get {
                return ResourceManager.GetString("gsInner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to kmh.
        /// </summary>
        public static string gsKMH {
            get {
                return ResourceManager.GetString("gsKMH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string gsLanguage {
            get {
                return ResourceManager.GetString("gsLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Machine Port.
        /// </summary>
        public static string gsMachinePort {
            get {
                return ResourceManager.GetString("gsMachinePort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make Boundary Contours.
        /// </summary>
        public static string gsMakeBoundaryContours {
            get {
                return ResourceManager.GetString("gsMakeBoundaryContours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual.
        /// </summary>
        public static string gsManual {
            get {
                return ResourceManager.GetString("gsManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Meters.
        /// </summary>
        public static string gsMeters {
            get {
                return ResourceManager.GetString("gsMeters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing ABLInes File.
        /// </summary>
        public static string gsMissingABLinesFile {
            get {
                return ResourceManager.GetString("gsMissingABLinesFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Boundary File.
        /// </summary>
        public static string gsMissingBoundaryFile {
            get {
                return ResourceManager.GetString("gsMissingBoundaryFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Contour File.
        /// </summary>
        public static string gsMissingContourFile {
            get {
                return ResourceManager.GetString("gsMissingContourFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Flag File.
        /// </summary>
        public static string gsMissingFlagsFile {
            get {
                return ResourceManager.GetString("gsMissingFlagsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Section File.
        /// </summary>
        public static string gsMissingSectionFile {
            get {
                return ResourceManager.GetString("gsMissingSectionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mph.
        /// </summary>
        public static string gsMPH {
            get {
                return ResourceManager.GetString("gsMPH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NEast.
        /// </summary>
        public static string gsN_East {
            get {
                return ResourceManager.GetString("gsN_East", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NWest.
        /// </summary>
        public static string gsN_West {
            get {
                return ResourceManager.GetString("gsN_West", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New.
        /// </summary>
        public static string gsNew {
            get {
                return ResourceManager.GetString("gsNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No ABLine Active.
        /// </summary>
        public static string gsNoABLineActive {
            get {
                return ResourceManager.GetString("gsNoABLineActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Boundary.
        /// </summary>
        public static string gsNoBoundary {
            get {
                return ResourceManager.GetString("gsNoBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Fields Found.
        /// </summary>
        public static string gsNoFieldsFound {
            get {
                return ResourceManager.GetString("gsNoFieldsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Guidance Lines.
        /// </summary>
        public static string gsNoGuidanceLines {
            get {
                return ResourceManager.GetString("gsNoGuidanceLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string gsNone {
            get {
                return ResourceManager.GetString("gsNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None Used.
        /// </summary>
        public static string gsNoneUsed {
            get {
                return ResourceManager.GetString("gsNoneUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to North.
        /// </summary>
        public static string gsNorth {
            get {
                return ResourceManager.GetString("gsNorth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nothing Deleted.
        /// </summary>
        public static string gsNothingDeleted {
            get {
                return ResourceManager.GetString("gsNothingDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset.
        /// </summary>
        public static string gsOffset {
            get {
                return ResourceManager.GetString("gsOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset Fix.
        /// </summary>
        public static string gsOffsetFix {
            get {
                return ResourceManager.GetString("gsOffsetFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string gsOpen {
            get {
                return ResourceManager.GetString("gsOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outer.
        /// </summary>
        public static string gsOuter {
            get {
                return ResourceManager.GetString("gsOuter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overshoot Reduction.
        /// </summary>
        public static string gsOvershootReduction {
            get {
                return ResourceManager.GetString("gsOvershootReduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pass #.
        /// </summary>
        public static string gsPass {
            get {
                return ResourceManager.GetString("gsPass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passes.
        /// </summary>
        public static string gsPasses {
            get {
                return ResourceManager.GetString("gsPasses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause.
        /// </summary>
        public static string gsPause {
            get {
                return ResourceManager.GetString("gsPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please Enter ABLine.
        /// </summary>
        public static string gsPleaseEnterABLine {
            get {
                return ResourceManager.GetString("gsPleaseEnterABLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pressure (bar).
        /// </summary>
        public static string gsPressureSensorValueLabel {
            get {
                return ResourceManager.GetString("gsPressureSensorValueLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Problem Making Path.
        /// </summary>
        public static string gsProblemMakingPath {
            get {
                return ResourceManager.GetString("gsProblemMakingPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program Will Exit Please Restart.
        /// </summary>
        public static string gsProgramWillExitPleaseRestart {
            get {
                return ResourceManager.GetString("gsProgramWillExitPleaseRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Really Reset Everything.
        /// </summary>
        public static string gsReallyResetEverything {
            get {
                return ResourceManager.GetString("gsReallyResetEverything", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record.
        /// </summary>
        public static string gsRecord {
            get {
                return ResourceManager.GetString("gsRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recorded Path File Corrupt.
        /// </summary>
        public static string gsRecordedPathFileIsCorrupt {
            get {
                return ResourceManager.GetString("gsRecordedPathFileIsCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset All.
        /// </summary>
        public static string gsResetAll {
            get {
                return ResourceManager.GetString("gsResetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset All For Sure?.
        /// </summary>
        public static string gsResetAllForSure {
            get {
                return ResourceManager.GetString("gsResetAllForSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resume.
        /// </summary>
        public static string gsResume {
            get {
                return ResourceManager.GetString("gsResume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SE.
        /// </summary>
        public static string gsS_East {
            get {
                return ResourceManager.GetString("gsS_East", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SW.
        /// </summary>
        public static string gsS_West {
            get {
                return ResourceManager.GetString("gsS_West", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and Return.
        /// </summary>
        public static string gsSaveAndReturn {
            get {
                return ResourceManager.GetString("gsSaveAndReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save As.
        /// </summary>
        public static string gsSaveAs {
            get {
                return ResourceManager.GetString("gsSaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sent To Machine Module.
        /// </summary>
        public static string gsSentToMachineModule {
            get {
                return ResourceManager.GetString("gsSentToMachineModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SetPoint.
        /// </summary>
        public static string gsSetPoint {
            get {
                return ResourceManager.GetString("gsSetPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift GPS Position (cm).
        /// </summary>
        public static string gsShiftGPSPosition {
            get {
                return ResourceManager.GetString("gsShiftGPSPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simulator On.
        /// </summary>
        public static string gsSimulatorOn {
            get {
                return ResourceManager.GetString("gsSimulatorOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Smooth AB Curve.
        /// </summary>
        public static string gsSmoothABCurve {
            get {
                return ResourceManager.GetString("gsSmoothABCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort.
        /// </summary>
        public static string gsSort {
            get {
                return ResourceManager.GetString("gsSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to South.
        /// </summary>
        public static string gsSouth {
            get {
                return ResourceManager.GetString("gsSouth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spacing (cm).
        /// </summary>
        public static string gsSpacing {
            get {
                return ResourceManager.GetString("gsSpacing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start or Delete A Boundary.
        /// </summary>
        public static string gsStartDeleteABoundary {
            get {
                return ResourceManager.GetString("gsStartDeleteABoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start New Field.
        /// </summary>
        public static string gsStartNewField {
            get {
                return ResourceManager.GetString("gsStartNewField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Charts.
        /// </summary>
        public static string gsSteerChart {
            get {
                return ResourceManager.GetString("gsSteerChart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Record Pause Boundary.
        /// </summary>
        public static string gsStopRecordPauseBoundary {
            get {
                return ResourceManager.GetString("gsStopRecordPauseBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To File.
        /// </summary>
        public static string gsToFile {
            get {
                return ResourceManager.GetString("gsToFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top Field View.
        /// </summary>
        public static string gsTopFieldView {
            get {
                return ResourceManager.GetString("gsTopFieldView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tram Lines.
        /// </summary>
        public static string gsTramLines {
            get {
                return ResourceManager.GetString("gsTramLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn AB Curve On.
        /// </summary>
        public static string gsTurnABCurveOn {
            get {
                return ResourceManager.GetString("gsTurnABCurveOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn On Contour of Make AB Line.
        /// </summary>
        public static string gsTurnOnContourOrMakeABLine {
            get {
                return ResourceManager.GetString("gsTurnOnContourOrMakeABLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Selected.
        /// </summary>
        public static string gsUseSelected {
            get {
                return ResourceManager.GetString("gsUseSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WebCam.
        /// </summary>
        public static string gsWebCam {
            get {
                return ResourceManager.GetString("gsWebCam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to West.
        /// </summary>
        public static string gsWest {
            get {
                return ResourceManager.GetString("gsWest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2D View Button..
        /// </summary>
        public static string h_btn2D {
            get {
                return ResourceManager.GetString("h_btn2D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3D View Button..
        /// </summary>
        public static string h_btn3D {
            get {
                return ResourceManager.GetString("h_btn3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AB Draw Button
        ///
        ///ABDraw only is available with a boundary created. It brings up a new form to click on the perimeter to create Lines, Curves, and a full perimeter guidance line. All lines can be named, deleted, and moved.  Handy for seeing all the guidance lines created..
        /// </summary>
        public static string h_btnABDraw {
            get {
                return ResourceManager.GetString("h_btnABDraw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ABLine Button
        ///
        ///ABLine guidance is repeating straight parallel lines across the field. Pushing the button enable AB guidance if a line exists, or if none, brings up the create/edit form where lines can be created either by 2 points with a line intersecting both or a single point and direction or heading. Lines to the right count positive upward and lines to the left are counted up as negative. .
        /// </summary>
        public static string h_btnABLine {
            get {
                return ResourceManager.GetString("h_btnABLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Steer Button
        ///
        ///Turns on and off Auto Steer steering control. You must have an active guidance line set. Pressing UTurn button can also turn on AutoSteer. In Config/Guidance you can set features and button function..
        /// </summary>
        public static string h_btnAutoSteer {
            get {
                return ResourceManager.GetString("h_btnAutoSteer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoSteer Angle and Settings Button
        ///
        ///Display Steer Angles and Configure AutoSteer settings.
        /// </summary>
        public static string h_btnAutoSteerConfig {
            get {
                return ResourceManager.GetString("h_btnAutoSteerConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to U Turn Button
        ///
        ///If guidance line is available you can auto turn around at the headland. You can set distance from edge of field to start turning, the diameter and type of turn. Pressing this button also enables autosteer and U Turn if both are off..
        /// </summary>
        public static string h_btnAutoYouTurn {
            get {
                return ResourceManager.GetString("h_btnAutoYouTurn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Mapping Color Button
        ///
        ///Brings up the color picker to choose a color to draw where you have applied. You can change as often as you like, but you need to travel a ways before the color changes, or turn off and on sections then the color change will be immediate..
        /// </summary>
        public static string h_btnChangeMappingColor {
            get {
                return ResourceManager.GetString("h_btnChangeMappingColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main Configuration Button
        ///
        ///Most of the settings are here. As you make changes they are automatically saved. Careful though as there is no cancel..
        /// </summary>
        public static string h_btnConfig {
            get {
                return ResourceManager.GetString("h_btnConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contour Button
        ///
        ///To be able to follow guidance beside your last pass. If ABLine and ABCurve are on, you can turn on and off Contour while one of those functions are still on switching between them..
        /// </summary>
        public static string h_btnContour {
            get {
                return ResourceManager.GetString("h_btnContour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Curve Guidance Button
        ///
        ///Curve guidance allows you to follow any shape in lines repeating across the field. The lines are like contour lines where the last pass follows the curvature of the previous, but any variations made are not carried to the next line. Pressing the button brings up the Curve Creation/Edit form or if a curve line exists it brings that up. Pressing it again allows you to copy/edit/create more lines..
        /// </summary>
        public static string h_btnCurve {
            get {
                return ResourceManager.GetString("h_btnCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cycle Through Lines Button
        ///
        ///Allows you to cycle or step through existing lines of the mode you currently have selected. Cycle all ABLines or all Curve Lines available. Disabled if no lines are made..
        /// </summary>
        public static string h_btnCycleLines {
            get {
                return ResourceManager.GetString("h_btnCycleLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Day or Night Colors Button..
        /// </summary>
        public static string h_btnDayNightMode {
            get {
                return ResourceManager.GetString("h_btnDayNightMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance and Area Button
        ///
        ///Shows user distance travelled and accumulated area marked. Touch the digits to reset to zero. Will be remembered when exiting the program and starting again.
        /// </summary>
        public static string h_btnDistanceArea {
            get {
                return ResourceManager.GetString("h_btnDistanceArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Guidance Line Button
        ///
        ///If there is an active guidance line available to edit, this will bring up the form to edit the line. It is the same button for either curve or line and brings up the correct form depending on which one you are using at the time. To copy or create new guidance lines press the ABLine or AB Curve button..
        /// </summary>
        public static string h_btnEditAB {
            get {
                return ResourceManager.GetString("h_btnEditAB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flag Mark Button
        ///
        ///Make a flag mark on the field surface. You can right click or long push to bring up a small menu to select either red green or yellow colored flags. Creating a flag brings up an edit box to allow you to add notes, it also shows what number flag was made..
        /// </summary>
        public static string h_btnFlag {
            get {
                return ResourceManager.GetString("h_btnFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Free Drive Button
        ///
        ///Allows you to test the autosteer hardware manually. Control the autosteer even if we don&apos;t have a line, drive straight.
        ///We can change the angle with the arrows..
        /// </summary>
        public static string h_btnFreeDrive {
            get {
                return ResourceManager.GetString("h_btnFreeDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive Steer Angle Zero
        ///
        ///Set steer angle to zero, or if it is zero sets angle to plus 5. Good for testing the steer response..
        /// </summary>
        public static string h_btnFreeDriveZero {
            get {
                return ResourceManager.GetString("h_btnFreeDriveZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headland On Off Button
        ///
        ///Once a headland is created you can turn the headland on and off with this button. When off, section control no longer stops at headland. You can disable section control turning off at the headland in the headland create/edit form from the field menu. .
        /// </summary>
        public static string h_btnHeadlandOnOff {
            get {
                return ResourceManager.GetString("h_btnHeadlandOnOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hydraulic Lift On Off Button
        ///
        ///Once a headland is active, and headland control is on, you can also turn on tool lift control to raise the tool when entering the headland and lower it again just before leaving it to the work area. This button is only visible with a headland created and on..
        /// </summary>
        public static string h_btnHydLift {
            get {
                return ResourceManager.GetString("h_btnHydLift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock to Line
        ///
        ///Locks to current contour line till you get to the end of it. Ignores all other lines..
        /// </summary>
        public static string h_btnLockToContour {
            get {
                return ResourceManager.GetString("h_btnLockToContour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual Section Control Button
        ///
        ///To turn sections off and on manually. No section control is performed, does not matter what is currently applied or not, inside or outside boundaries..
        /// </summary>
        public static string h_btnManualOffOn {
            get {
                return ResourceManager.GetString("h_btnManualOffOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointing North and Flat 2D view.
        /// </summary>
        public static string h_btnN2D {
            get {
                return ResourceManager.GetString("h_btnN2D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointing North and Flat 3D view.
        /// </summary>
        public static string h_btnN3D {
            get {
                return ResourceManager.GetString("h_btnN3D", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to U Turn Row Skips
        ///
        ///Select how many passes to skip when using U Turn. .
        /// </summary>
        public static string h_btnRowWidthSkips {
            get {
                return ResourceManager.GetString("h_btnRowWidthSkips", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Section Control Off On Button
        ///
        ///Automatic section control turns sections on if area not applied and off if area already applied. It will turn off outside of boundaries. You can set how early or how late the sections are controlled in Config/Sections.
        /// </summary>
        public static string h_btnSectionOffAutoOn {
            get {
                return ResourceManager.GetString("h_btnSectionOffAutoOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Snap Line to Pivot Button
        ///
        ///Pressing Snap button moves the line to the vehicle pivot point. The line change of position is not saved. If you want to save the line, Use the Edit AB button where you can save the new position permanently. Snap works in Curve and AB Line but not in Contour..
        /// </summary>
        public static string h_btnSnapToPivot {
            get {
                return ResourceManager.GetString("h_btnSnapToPivot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stanley or Pure Pursuit Steering Mode
        ///
        ///Select the mode you wish to use. Stanley uses the front of the vehicle to reference how quickly to steer to the line. The pivot just follows along trailing not on the line. Good for a swather or harvester, but not so good for attached tools. 
        ///Pure Pursuit uses the pivot point to determine steering corrections and tries to correct heading and off track error to get on the line. The integral also varies heading to force the pivot to the line so on slopes or side draft [rest of string was truncated]&quot;;.
        /// </summary>
        public static string h_btnStanleyPure {
            get {
                return ResourceManager.GetString("h_btnStanleyPure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the AgIO Application Button
        ///
        ///If AgIO is already running, button does nothing, but if AgIO is not running it will start it. AgIO is responsible for all serial and UDP input output for AgOpenGPS..
        /// </summary>
        public static string h_btnStartAgIO {
            get {
                return ResourceManager.GetString("h_btnStartAgIO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steer Angle Calculator
        ///
        ///Function to calculate the real steering angle, drive steady in a circle slowly, click start, and it will
        ///show the angle when finished. The difference between left and right shows Ackerman error. Adjust Ackermann angle so left turn is the same as right turn..
        /// </summary>
        public static string h_btnStartSA {
            get {
                return ResourceManager.GetString("h_btnStartSA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steer Angle Down Button
        ///
        ///Turns more to the left. Lowers the Free Drive steering angle..
        /// </summary>
        public static string h_btnSteerAngleDown {
            get {
                return ResourceManager.GetString("h_btnSteerAngleDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steer Angle Up Button
        ///
        ///Turns more to the right. Raises the Free Drive steering angle..
        /// </summary>
        public static string h_btnSteerAngleUp {
            get {
                return ResourceManager.GetString("h_btnSteerAngleUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tilt the view Downward Button.
        /// </summary>
        public static string h_btnTiltDown {
            get {
                return ResourceManager.GetString("h_btnTiltDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tilt the view upward button.
        /// </summary>
        public static string h_btnTiltUp {
            get {
                return ResourceManager.GetString("h_btnTiltUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tram Line Display Mode Button
        ///
        ///If there are tram lines active, you can select all trams or inner or outer or none visible. Trams are made by pressing field menu and then selecting tramlines..
        /// </summary>
        public static string h_btnTramDisplayMode {
            get {
                return ResourceManager.GetString("h_btnTramDisplayMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to U Turn Skip Enable
        ///
        ///Allows automatic looping based on number set in Row skips to do as a group of passes, then move on to next group automatically..
        /// </summary>
        public static string h_btnYouSkipEnable {
            get {
                return ResourceManager.GetString("h_btnYouSkipEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wheel Angle Sensor Zero Button
        ///
        ///Allows the steering angle to be zero degrees when driving
        ///forward. This setting must be done and be zero degrees when
        ///driving straight ahead in order to be properly set. Wheel Angle
        ///Sensor (WAS) zero allows you to remove that non-zero steering
        ///angle so it is zero degrees. This is a very important setting and
        ///must be accurately set..
        /// </summary>
        public static string h_btnZeroWAS {
            get {
                return ResourceManager.GetString("h_btnZeroWAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zoom in to see less field button.
        /// </summary>
        public static string h_btnZoomIn {
            get {
                return ResourceManager.GetString("h_btnZoomIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zoom out to see more field button.
        /// </summary>
        public static string h_btnZoomOut {
            get {
                return ResourceManager.GetString("h_btnZoomOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ackerman Compensation Slider
        ///
        ///Ackermann steering geometry is a geometric arrangement of
        ///linkages in the steering of a vehicle designed to solve the problem
        ///of wheels on the inside and outside of a turn needing to trace out
        ///circles of different radius.
        ///The setting is based on reference of the right wheel where the left wheel angle is determined by multiplying the steering wheel angle by the percentage Ackermann is set to. 
        ///Ackermann has no effect on steer angle when turning right, only left.
        ///
        ///Exampl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string h_hsbarAckerman {
            get {
                return ResourceManager.GetString("h_hsbarAckerman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counts Per Degree Slider
        ///
        ///Also known as CPD
        ///The A/D converter puts out -4000 to +4000 (8000 in total) levels
        ///as the Wheel Angle Sensor puts out 0 to 5v. To convert that into
        ///steer angle degrees - because we don’t visualize counts very well,
        ///we now divide those levels by counts per degree. So, when the
        ///CPD is increased, the wheels turn farther for each degree needed.
        ///When lowered, the wheels don’t turn as far. This is a critical setting, 
        ///if the vehicle steers too far lower the CPD and vice versa..
        /// </summary>
        public static string h_hsbarCountsPerDegree {
            get {
                return ResourceManager.GetString("h_hsbarCountsPerDegree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stanley Heading Slider
        ///
        ///The slider affects how much opposition to distance setting
        ///there is by keeping the vehicle turning away from the line.
        ///It’s the winner of the two, heading and distance away that
        ///determines the length of time to get to the line. Ideal is to
        ///balance them so you get quickly to the line without going too far
        ///over the line or oscillating back and forth (too aggressive)..
        /// </summary>
        public static string h_hsbarHeadingErrorGain {
            get {
                return ResourceManager.GetString("h_hsbarHeadingErrorGain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum PWM Gain Slider
        ///
        ///Limits the total power deliver to steer motor or valve to prevent steering too violently.
        ///Initially set lower to prevent oscillation. If driving fast be sure to not turn too fast to prevent roll over..
        /// </summary>
        public static string h_hsbarHighSteerPWM {
            get {
                return ResourceManager.GetString("h_hsbarHighSteerPWM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stanley Integral Slider
        ///
        ///Integral setting allows the distance error to keep adding up over time to help add steer angle when a normal distance and heading calculation won&apos;t bring the tractor to the line.
        ///Like on a sidehill or pulling heavy draft to one side. Too much integral will cause it to get too fast to the line and cross over it.
        ///Too low of a setting will take too long to get to the line.
        ///Better to set a bit lower or it will oscillate across line a lot..
        /// </summary>
        public static string h_hsbarIntegral {
            get {
                return ResourceManager.GetString("h_hsbarIntegral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pure Pursuit Integral Slider
        ///
        ///Integral setting allows the distance error to keep adding up over time to help add steer angle when a normal distance and heading calculation won&apos;t bring the tractor to the line.
        ///Like on a sidehill or pulling heavy draft to one side. Too much integral will cause it to get too fast to the line and cross over it.
        ///Too low of a setting will take too long to get to the line.
        ///Better to set a bit lower or it will oscillate across line a lot..
        /// </summary>
        public static string h_hsbarIntegralPurePursuit {
            get {
                return ResourceManager.GetString("h_hsbarIntegralPurePursuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Look Ahead Slider
        ///
        ///How far ahead of the vehicle is the reference point. If point is close vehicle turns very quickly.
        ///Farther away the steering is more relaxed and takes longer to get to line. Use the Speed gain to set distance based on speed as it takes less steering when you go faster. But set lookahead first. 
        ///Tune it at the speed you will most often be travelling. .
        /// </summary>
        public static string h_hsbarLookAhead {
            get {
                return ResourceManager.GetString("h_hsbarLookAhead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Look Ahead Speed Gain Slider
        ///
        ///The faster you drive, the faster you get to the line. 
        ///This slider sets how quickly the reference point moves away from you as your speed increases and reduces the steer angle so it doesn&apos;t turn as fast preventing going back and forth across the line..
        /// </summary>
        public static string h_hsbarLookAheadMult {
            get {
                return ResourceManager.GetString("h_hsbarLookAheadMult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low Steer Angle PWM
        ///
        ///As the vehicle gets closer to the line, the gain is reduced linearly
        ///from the max value to the low value. This helps it overshoot the
        ///line when close, but provide rapid movement when further away..
        /// </summary>
        public static string h_hsbarLowSteerPWM {
            get {
                return ResourceManager.GetString("h_hsbarLowSteerPWM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Steer Angle Slider
        ///
        ///The maximum left and right steer angle autosteer will provide. Initially a low setting here will help you not drive all over the place with wild steer angles. 
        ///You do need a high value to steer around U Turns that are quite small and require a sharp turn. .
        /// </summary>
        public static string h_hsbarMaxSteerAngle {
            get {
                return ResourceManager.GetString("h_hsbarMaxSteerAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum PWM Sider
        ///
        ///Minimum PWM value is used to apply a minimum amount of
        ///power to overcome friction of the valve/motor. Too high and it will turn all the time, 
        ///too low and there will be a delay as pwm increases before the steering happens. 
        ///The more proportional gain, the more sensitive this setting..
        /// </summary>
        public static string h_hsbarMinPWM {
            get {
                return ResourceManager.GetString("h_hsbarMinPWM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proportional Gain Slider
        ///
        ///The proportional gain is multiplied by the distance error then added to
        ///the minimum PWM value to generate the final output value. The
        ///higher this value the faster the motor will correct the steering.
        ///However, if it is too high, the steering will overshoot the line and
        ///then oversteer the other way again called oscillate. Too low of a value and it will
        ///either take too long or never get to the guidance line. A critical setting that 
        ///takes some experimenting to see its effect.  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string h_hsbarProportionalGain {
            get {
                return ResourceManager.GetString("h_hsbarProportionalGain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sidehill Compensation Slider
        ///
        ///Adds a static steer angle based on roll angle to turn the wheels to compensate for the side draft of hills. You can make the vehicle go above the line with this setting allowing the tool to follow better as well..
        /// </summary>
        public static string h_hsbarSideHillComp {
            get {
                return ResourceManager.GetString("h_hsbarSideHillComp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stanley Distance Slider
        ///
        ///The slider works with distance. The more aggressive the
        ///faster it tries to steer towards the line with the risk of crossing
        ///over the line. The heading slider tries to dampen this effect..
        /// </summary>
        public static string h_hsbarStanleyGain {
            get {
                return ResourceManager.GetString("h_hsbarStanleyGain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wheel Angle Sensor Zero Slider
        ///
        ///Moving this slider changes the zero position for steering angle. Drive in free drive mode and adjust this so you are going straight out. 
        ///This is a critical setting.
        /// </summary>
        public static string h_hsbarWasOffset {
            get {
                return ResourceManager.GetString("h_hsbarWasOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoSteer Integral Value
        ///
        ///Display only. This value shows the amount of additional steering angle to bring the vehicle closer to the guidance line..
        /// </summary>
        public static string h_lblIntegral {
            get {
                return ResourceManager.GetString("h_lblIntegral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lateral Shift Touch
        ///
        ///Touching this area allows the vehicle to shift left or right to next guidance line. You can touch more then once and shift over multiple lines. Touching the other arrow allows you to reduce the number of shifts over..
        /// </summary>
        public static string h_lblLateralTurnTouch {
            get {
                return ResourceManager.GetString("h_lblLateralTurnTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual Turn and Cancel Touch
        ///
        ///You can initiate a manual U Turn or cancel it if you are already in a manual turn. When driving in normal auto U Turn touching one of these jumps to the next line and turns around..
        /// </summary>
        public static string h_lblManualTurnCancelTouch {
            get {
                return ResourceManager.GetString("h_lblManualTurnCancelTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speed Indicator
        ///
        ///Dual purpose label. Shows the speed of the vehicle and also tapping the value brings up the GPS Data form showing all the GPS information..
        /// </summary>
        public static string h_lblSpeed {
            get {
                return ResourceManager.GetString("h_lblSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steer Information Indicator
        ///
        ///Graphic shows steering angle as well as the color shows auto steer status.....
        ///
        ///Purple - Steer module not connected.
        ///Red - Steer module connected, not enabled.
        ///Orange - Steer Module connected and enabled, steer switch is off
        ///Green - Connected, enabled, and auto steering. Fully functional..
        /// </summary>
        public static string h_lblSteerCircleTouch {
            get {
                return ResourceManager.GetString("h_lblSteerCircleTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This area shows the distance to the start of the next U Turn. There are normally 2 functions here. When not in a U Turn, touching this area allows you to now turn the opposite direction. If you are doing a U Turn then touching this area cancels the U Turn - so be careful and grab the wheel..
        /// </summary>
        public static string h_lblSwapDirectionCancel {
            get {
                return ResourceManager.GetString("h_lblSwapDirectionCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many NMEA messages have been missed or too late from AgIO.
        /// </summary>
        public static string h_lbludpWatchCounts {
            get {
                return ResourceManager.GetString("h_lbludpWatchCounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swap Direction Touch
        ///
        ///Touch here if the vehicle is pointing backwards while travelling forwards. Without dual heading you don&apos;t know if you are backing up or going forward. Backing up is position to position like going forward but 180 degrees is added to your heading to make it look like you are backing up. At times, like turning sharp when going slow the direction can get confused and this resets that direction. Drive forward and touch this area to tell AOG which way forward is. Can be touched at any tim [rest of string was truncated]&quot;;.
        /// </summary>
        public static string h_lblVehicleDirectionResetTouch {
            get {
                return ResourceManager.GetString("h_lblVehicleDirectionResetTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Time
        ///
        ///Adds a time stamp to the current line name. Helps make the name unique as well..
        /// </summary>
        public static string ha_btnAddTime {
            get {
                return ResourceManager.GetString("ha_btnAddTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Point
        ///
        ///This is the first point of the line. It is also used for the base point of A plus heading. 
        ///
        ///Once A is touched, you can either touch B point or enter in the heading..
        /// </summary>
        public static string ha_btnAPoint {
            get {
                return ResourceManager.GetString("ha_btnAPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to B Point
        ///
        ///Makes a line between the A point set and the B point. Heading of line is calculated. You can modify the line by entering a heading or by touching B as often as you want..
        /// </summary>
        public static string ha_btnBPoint {
            get {
                return ResourceManager.GetString("ha_btnBPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel and Turn Off
        ///
        ///Exit the form and turn off the guidance mode. Existing lines are not deleted, it just turns them off in main display..
        /// </summary>
        public static string ha_btnCancel {
            get {
                return ResourceManager.GetString("ha_btnCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel and Return
        ///
        ///Cancels the current action and returns you back to the start..
        /// </summary>
        public static string ha_btnCancelCreate {
            get {
                return ResourceManager.GetString("ha_btnCancelCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Line
        ///
        ///Makes a copy of the line selected in the List View. The name must remain unique. .
        /// </summary>
        public static string ha_btnDuplicate {
            get {
                return ResourceManager.GetString("ha_btnDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and Continue.
        /// </summary>
        public static string ha_btnEnterContinue {
            get {
                return ResourceManager.GetString("ha_btnEnterContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List Delete
        ///
        ///Select a line from the list, touch delete to remove the line..
        /// </summary>
        public static string ha_btnListDelete {
            get {
                return ResourceManager.GetString("ha_btnListDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Line and Exit
        ///
        ///Uses the line selected in the list and exit. .
        /// </summary>
        public static string ha_btnListUse {
            get {
                return ResourceManager.GetString("ha_btnListUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual Entry
        ///
        ///Manual entry of A and B points by using Latitude and Longitude. Brings up another form. .
        /// </summary>
        public static string ha_btnManual {
            get {
                return ResourceManager.GetString("ha_btnManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Line
        ///
        ///Brings up the form to create a new line by AB or A plus heading or Manual Latitude and Longitude..
        /// </summary>
        public static string ha_btnNewABLine {
            get {
                return ResourceManager.GetString("ha_btnNewABLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Heading Entry
        ///
        ///Enter a heading once the A Point has been set. Any number between 0 and 360 degrees..
        /// </summary>
        public static string ha_nudHeading {
            get {
                return ResourceManager.GetString("ha_nudHeading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line Name
        ///
        ///Edit and make the name of the line here. Keep names unique. Touching the Time button adds time to the description..
        /// </summary>
        public static string ha_textBox1 {
            get {
                return ResourceManager.GetString("ha_textBox1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add New Boundary
        ///
        ///Brings up the form to choose to either load a kml file for boundary or to Drive one. 
        ///
        ///If no boundaries are made, the first one you make is the outer boundary.
        ///
        ///If there is an outer boundary already made, the rest made will be inner boundaries.
        ///
        ///Touch on the Drive through Yes or No button for that boundary to change..
        /// </summary>
        public static string hb_btnAdd {
            get {
                return ResourceManager.GetString("hb_btnAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Point
        ///
        ///Add a point at the current position based on offset. Nice to make long straight lines by marking corners only. 
        ///
        ///You can record around corners, pause, hit Add point, drive and keep recording. Anything you want to do..
        /// </summary>
        public static string hb_btnAddPoint {
            get {
                return ResourceManager.GetString("hb_btnAddPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel
        ///
        ///At any time or on any form you can cancel. As you make boundaries and do changes they are saved. Nothing is saved when cancelling or exiting..
        /// </summary>
        public static string hb_btnCancel {
            get {
                return ResourceManager.GetString("hb_btnCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single Boundary Delete
        ///
        ///Select a boundary in the list and delete it..
        /// </summary>
        public static string hb_btnDelete {
            get {
                return ResourceManager.GetString("hb_btnDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Boundaries Delete
        ///
        ///This button deletes all the boundaries. Careful - once gone they are gone..
        /// </summary>
        public static string hb_btnDeleteAll {
            get {
                return ResourceManager.GetString("hb_btnDeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Last Point Made
        ///
        ///Deletes the last point made. Keep touching to delete as many as you want..
        /// </summary>
        public static string hb_btnDeleteLast {
            get {
                return ResourceManager.GetString("hb_btnDeleteLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive The Boundary
        ///
        ///Allows you to record the boundary as you drive. Button brings up the Boundary Player form to record points and where the points left or right of the center pivot point they are recorded..
        /// </summary>
        public static string hb_btnDriveOrExt {
            get {
                return ResourceManager.GetString("hb_btnDriveOrExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make Boundary using KML
        ///
        ///Brings up the next form that allows you to load either a single boundary or multiple boundaries..
        /// </summary>
        public static string hb_btnGetKML {
            get {
                return ResourceManager.GetString("hb_btnGetKML", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark Left or Right
        ///
        ///Button used to select the left or right side of vehicle for making boundary.
        ///
        ///You can also enter distance in the offset numeric box..
        /// </summary>
        public static string hb_btnLeftRight {
            get {
                return ResourceManager.GetString("hb_btnLeftRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load Single Boundary From Google Earth
        ///
        ///Load a kml boundary that can either be the outer boundary or as inner boundaries. If there are no boundaries, it will be considered an outer boundary. If there already is a boundary, the boundary will be considered an inner boundary. .
        /// </summary>
        public static string hb_btnLoadBoundaryFromGE {
            get {
                return ResourceManager.GetString("hb_btnLoadBoundaryFromGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load Multi Boundary From Google Earth
        ///
        ///Load a kml boundary that has the first line as the outer boundary and the rest as inner boundaries. .
        /// </summary>
        public static string hb_btnLoadMultiBoundaryFromGE {
            get {
                return ResourceManager.GetString("hb_btnLoadMultiBoundaryFromGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Google Earth
        ///
        ///Opens Google Earth if installed. There, you can make and save kml files for boundaries..
        /// </summary>
        public static string hb_btnOpenGoogleEarth {
            get {
                return ResourceManager.GetString("hb_btnOpenGoogleEarth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record Pause 
        ///
        ///Touch to start recording, touch again to pause. While in pause you can touch add points or delete points, swap sides, change offset..
        /// </summary>
        public static string hb_btnPausePlay {
            get {
                return ResourceManager.GetString("hb_btnPausePlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Line
        ///
        ///Delete existing points and start over. .
        /// </summary>
        public static string hb_btnRestart {
            get {
                return ResourceManager.GetString("hb_btnRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop Boundary
        ///
        ///Boundary is all done. This will connect the last point to the first point and exit.
        ///
        ///You need at least 5 points or it will just not make a boundary..
        /// </summary>
        public static string hb_btnStop {
            get {
                return ResourceManager.GetString("hb_btnStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset From Pivot
        ///
        ///The offset to mark the boundary is measure from the center of the pivot point - usually between the driving wheels - to mark the boundary lines.
        ///
        ///It defaults to one half the tool width. Use the select sides button to move from left to right side..
        /// </summary>
        public static string hb_nudOffset {
            get {
                return ResourceManager.GetString("hb_nudOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Roll Offset
        ///
        ///Removes any offset currently added to roll to show actual roll angle as mounted.
        /// </summary>
        public static string hc_btnRemoveZeroOffset {
            get {
                return ResourceManager.GetString("hc_btnRemoveZeroOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove IMU from Display
        ///
        ///If you disconnect IMJ, you can remove all the values shown on the main display. Once you connect an imu to AgIO, it will show again automatically..
        /// </summary>
        public static string hc_btnResetIMU {
            get {
                return ResourceManager.GetString("hc_btnResetIMU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Changes to AutoSteer and Save
        ///
        ///If you make changes, be sure to send them and save them by touching send. If you do not, they will not be saved. if you want to cancel, just go to a different config page and return again. 
        ///
        ///Don&apos;t forget to Send and Save by using this button..
        /// </summary>
        public static string hc_btnSendSteerConfigPGN {
            get {
                return ResourceManager.GetString("hc_btnSendSteerConfigPGN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vehicle Delete Button
        ///
        ///Select a vehicle in the list, touch Delete Button to delete it..
        /// </summary>
        public static string hc_btnVehicleDelete {
            get {
                return ResourceManager.GetString("hc_btnVehicleDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vehicle Load Button
        ///
        ///Select a vehicle in the list, touch Load Button to load it..
        /// </summary>
        public static string hc_btnVehicleLoad {
            get {
                return ResourceManager.GetString("hc_btnVehicleLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vehicle Save Button
        ///
        ///After entering a vehicle name in the textbox, touch Save Button to save it..
        /// </summary>
        public static string hc_btnVehicleSave {
            get {
                return ResourceManager.GetString("hc_btnVehicleSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vehicle Save As Button
        ///
        ///Click a vehicle in the list, then touch Save As Button to overwrite that vehicle with the current settings. Answer Yes to overwrite the chosen vehicle or No to do nothing..
        /// </summary>
        public static string hc_btnVehicleSaveAs {
            get {
                return ResourceManager.GetString("hc_btnVehicleSaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zero Roll Value
        ///
        ///Add the negative of the current roll value displayed to show zero roll. Removes the sensor mounted roll angle error so when the vehicle is flat, the roll value shows zero..
        /// </summary>
        public static string hc_btnZeroRoll {
            get {
                return ResourceManager.GetString("hc_btnZeroRoll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoSteer Manual or Automatic Engage mode.
        ///
        ///In manual mode, you must press the AutoSteer button to engage AutoSteer. Steer motor/Valve steer switch has no effect.
        ///
        ///In Auto Mode, when you engage the steer or valve steering switch, the AutoSteer button will automatically turn on.
        ///
        ///Be careful with Auto mode when travelling down the road. Always turn off or disconnect power to any autosteer mechanical device when commuting. .
        /// </summary>
        public static string hc_cboxAutoSteerAuto {
            get {
                return ResourceManager.GetString("hc_cboxAutoSteerAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A2D Convertor Input Configuration
        ///
        ///Select either Single or Differential input. most commonly it is single type input ground referenced. Oddly even the Differential is still ground referenced but seems to work with OEM style WAS..
        /// </summary>
        public static string hc_cboxConv {
            get {
                return ResourceManager.GetString("hc_cboxConv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Sensor enable
        ///
        ///If using a current sensor enable this feature to stop autosteer by holding the wheel and detecting a high current use..
        /// </summary>
        public static string hc_cboxCurrentSensor {
            get {
                return ResourceManager.GetString("hc_cboxCurrentSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Danfoss Valve
        ///
        ///If using the Danfoss style Udc valve, select this. The arduino sketch will then automatically use and send out the right values for the valve..
        /// </summary>
        public static string hc_cboxDanfoss {
            get {
                return ResourceManager.GetString("hc_cboxDanfoss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert Roll
        ///
        ///Roll to the right must be a positive value. If roll shows a negative value, touch Invert Roll to make it positive. 
        ///
        ///A very important setting. See the picture on this form for clarity..
        /// </summary>
        public static string hc_cboxDataInvertRoll {
            get {
                return ResourceManager.GetString("hc_cboxDataInvertRoll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steering Wheel Encoder
        ///
        ///Poorly named, but allows the detection of turning the steering wheel being turned by using a shaft sensor. This setting enables it. 
        ///
        ///Additional setting is the counts. when the steer module counts that many detections, it turns off the steering drive..
        /// </summary>
        public static string hc_cboxEncoder {
            get {
                return ResourceManager.GetString("hc_cboxEncoder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Dual Antenna As IMU
        ///
        ///Instead of using dual antenna as heading directly, use fix to fix single antenna for heading and smooth heading with dual antenna heading value..
        /// </summary>
        public static string hc_cboxIsDualAsIMU {
            get {
                return ResourceManager.GetString("hc_cboxIsDualAsIMU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hydraulic Control Off On
        ///
        ///Enable hydraulic control of tool when entering and leaving the headland. .
        /// </summary>
        public static string hc_cboxIsHydOn {
            get {
                return ResourceManager.GetString("hc_cboxIsHydOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverse Detect
        ///
        ///Show the vehicle backing up when enabled or screen spins 180 degrees and shows still going forward.
        /// </summary>
        public static string hc_cboxIsReverseOn {
            get {
                return ResourceManager.GetString("hc_cboxIsReverseOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RTK Alarm
        ///
        ///Enabling this shows an alarm called Lost RTK on the main screen..
        /// </summary>
        public static string hc_cboxIsRTK {
            get {
                return ResourceManager.GetString("hc_cboxIsRTK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AutoSteer Off if RTK Alarm
        ///
        ///If RTK alarm is on, then enabling this turns off the AutoSteer when RTK is lost..
        /// </summary>
        public static string hc_cboxIsRTK_KillAutoSteer {
            get {
                return ResourceManager.GetString("hc_cboxIsRTK_KillAutoSteer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert Controls
        ///
        ///If your controls are on instead of off, enable this to invert the control. .
        /// </summary>
        public static string hc_cboxMachInvertRelays {
            get {
                return ResourceManager.GetString("hc_cboxMachInvertRelays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Motor Driver Type
        ///
        ///2 Choices being Cytron and IBT2 so pick the one you are using..
        /// </summary>
        public static string hc_cboxMotorDrive {
            get {
                return ResourceManager.GetString("hc_cboxMotorDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of Sections
        ///
        ///Using the drop down, choose the number of sections your tool has. It uses the default section width value to fill in the section width for you. 
        ///Generally set the default section width first, then the number of sections. You can now manually edit any section width if they are different by clicking on that particular section width spinner.
        /// </summary>
        public static string hc_cboxNumSections {
            get {
                return ResourceManager.GetString("hc_cboxNumSections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pressure Sensor Switch
        ///
        ///when using an oil pressure sensor, enable this feature..
        /// </summary>
        public static string hc_cboxPressureSensor {
            get {
                return ResourceManager.GetString("hc_cboxPressureSensor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Section Response Fast/Slow
        ///
        ///This selects how often section control is run per second. In fast mode it is one half the nmea speed and in slow mode it is half of that. 
        ///If you have a slow computer, and section control is not super critical and speeds are slower, use the slow mode. If you find the sections aren&apos;t turning on fast enough, select fast mode. 
        ///Section math is intense along with boundaries and headlands so this may help a slower tablet..
        /// </summary>
        public static string hc_cboxSectionResponse {
            get {
                return ResourceManager.GetString("hc_cboxSectionResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steer Switch Style
        ///
        ///2 types of Switch. 
        ///
        ///Button- Push and release turns Auto Steer On. Push and release again turns Auto Steer off.
        ///
        ///Switch - like a light switch style. Connect and Auto Steer is on, Disconnect and Auto Steer turns off. 
        ///
        ///Note... Any type switch or button can be configured to do either method. The Switch setting is most common for steer motors that just push on a switch when engaged and then when released simply opens the switch again.
        ///
        ///The button setting is more common for hydraul [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hc_cboxSteerEnable {
            get {
                return ResourceManager.GetString("hc_cboxSteerEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tram Tool Control
        ///
        ///Enable sending tram on off signal to seed runs for full tram control. .
        /// </summary>
        public static string hc_cboxTramOnBackBuffer {
            get {
                return ResourceManager.GetString("hc_cboxTramOnBackBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Day Night automatically goes to night mode at sunset and day mode at sunrise.
        /// </summary>
        public static string hc_chkDisplayDayNight {
            get {
                return ResourceManager.GetString("hc_chkDisplayDayNight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra guidance lines beside the one you are following.
        /// </summary>
        public static string hc_chkDisplayExtraGuides {
            get {
                return ResourceManager.GetString("hc_chkDisplayExtraGuides", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the textured background on field surface or if off shows just a solid color.
        /// </summary>
        public static string hc_chkDisplayFloor {
            get {
                return ResourceManager.GetString("hc_chkDisplayFloor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the grid on the field surface.
        /// </summary>
        public static string hc_chkDisplayGrid {
            get {
                return ResourceManager.GetString("hc_chkDisplayGrid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the custom keyboard when entering a text type of entry.
        /// </summary>
        public static string hc_chkDisplayKeyboard {
            get {
                return ResourceManager.GetString("hc_chkDisplayKeyboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Graphic dots at top of screen showing distance away from the guidance line.
        /// </summary>
        public static string hc_chkDisplayLightbar {
            get {
                return ResourceManager.GetString("hc_chkDisplayLightbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log the incoming NMEA, stored in the fields directory
        ///
        ///Caution - Make a very big file quickly.
        /// </summary>
        public static string hc_chkDisplayLogNMEA {
            get {
                return ResourceManager.GetString("hc_chkDisplayLogNMEA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the individual polygons that make up the mapping.
        /// </summary>
        public static string hc_chkDisplayPolygons {
            get {
                return ResourceManager.GetString("hc_chkDisplayPolygons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the colorful sky in the background when in 3D.
        /// </summary>
        public static string hc_chkDisplaySky {
            get {
                return ResourceManager.GetString("hc_chkDisplaySky", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display the Speedometer in top right corner.
        /// </summary>
        public static string hc_chkDisplaySpeedo {
            get {
                return ResourceManager.GetString("hc_chkDisplaySpeedo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full Screen on Start Up.
        /// </summary>
        public static string hc_chkDisplayStartFullScreen {
            get {
                return ResourceManager.GetString("hc_chkDisplayStartFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert Steer Motor Drive
        ///
        ///If the motor turns the wrong way in Drive Mode, enable the Invert Steer Motor setting so it turns the opposite way.
        /// </summary>
        public static string hc_chkInvertSteer {
            get {
                return ResourceManager.GetString("hc_chkInvertSteer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert Wheel Angle Sensor
        ///
        ///Turning to the right the WAS should be a positive angle. If it is not, Invert the WAS.
        /// </summary>
        public static string hc_chkInvertWAS {
            get {
                return ResourceManager.GetString("hc_chkInvertWAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert Steer Relay
        ///
        ///This controls only the relay for PWM2 pin. If you need Normally open or Normally Closed click the invert to have the opposite function of the relay..
        /// </summary>
        public static string hc_chkSteerInvertRelays {
            get {
                return ResourceManager.GetString("hc_chkSteerInvertRelays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IMU Fusion Balance
        ///
        ///As usual a setting at either extreme is bad. IMU balance sets how much IMU and how much fix to fix heading is used to determine a fused heading. 
        ///
        ///The GPS is quite stable over a longer time period while the IMU is very stable short term but drifts to some funky angle over time. 
        ///
        ///If too much IMU is set, then making sharp turns etc can take a long time to correct by the GPS and will cause steering to be in the wrong heading. Too much GPS and the heading will be noisy back and forth  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hc_hsbarFusion {
            get {
                return ResourceManager.GetString("hc_hsbarFusion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of UTurn Legs
        ///
        ///Sets the amount of meters the legs of the uturn continue past and into the turn. Allows the vehicle to line up better to the next guidance line.
        /// </summary>
        public static string hc_lblUTurnLegDistance {
            get {
                return ResourceManager.GetString("hc_lblUTurnLegDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UTurn Smoothing
        ///
        ///Removes the abrupt change of direction for Keyhole turns and smooths them out. Makes the turn easier to follow..
        /// </summary>
        public static string hc_lblUTurnSmoothing {
            get {
                return ResourceManager.GetString("hc_lblUTurnSmoothing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vehicles List
        ///
        ///The list of saved vehicles..
        /// </summary>
        public static string hc_ListViewVehicles {
            get {
                return ResourceManager.GetString("hc_ListViewVehicles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Length of AB Line
        ///
        ///Make sure line is long enough to reach from boundary edge to boundary edge and a little more. Twice as long as longest field dimension is easy..
        /// </summary>
        public static string hc_nudABLength {
            get {
                return ResourceManager.GetString("hc_nudABLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Age of GPS Alarm
        ///
        ///Set how many seconds before the alarm occurs.
        /// </summary>
        public static string hc_nudAgeAlarm {
            get {
                return ResourceManager.GetString("hc_nudAgeAlarm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Section Cutoff Speed
        ///
        ///The lower limit of speed before the sections auto turn off. Below this setting, the sections will turn off. Prevents over application..
        /// </summary>
        public static string hc_nudCutoffSpeed {
            get {
                return ResourceManager.GetString("hc_nudCutoffSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Section Width
        ///
        ///Enter the default section width for all sections here. Selecting then the number of sections fills in individual sections with the default value. Now go ahead and edit any sections that need a different width then the default..
        /// </summary>
        public static string hc_nudDefaultSectionWidth {
            get {
                return ResourceManager.GetString("hc_nudDefaultSectionWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forward Direction Compensation For Turns
        ///
        ///This is a difficult concept to describe, so there is a video about it on you tube called Reverse Compensation. But here goes in text.
        ///
        ///What you are doing is offsetting the effect that the antenna swings very quickly left or right when you initially turn the steering wheel. This tries to dampen that effect. It is very complex to eliminate. There is much less of this effect when going forward so best just to leave the setting as is. 
        ///
        ///You can use the steering ch [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hc_nudForwardComp {
            get {
                return ResourceManager.GetString("hc_nudForwardComp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guidance Line Acquire Distance
        ///
        ///How many seconds ahead should AOG look for the next guidance line to lock onto. The faster you drive, the farther it will look ahead. AOG will draw the next guidance line at this spot and you can hit autosteer button and will lock on..
        /// </summary>
        public static string hc_nudGuidanceLookAhead {
            get {
                return ResourceManager.GetString("hc_nudGuidanceLookAhead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hydraulic Look Ahead
        ///
        ///Time in seconds how far ahead the tool should begin to lower when entering the work area. Lift occurs when tool is completely out of the work area and in the headland..
        /// </summary>
        public static string hc_nudHydLiftLookAhead {
            get {
                return ResourceManager.GetString("hc_nudHydLiftLookAhead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross Track Distance per Pixel
        ///
        ///How many cm/inches represent each square dot on the light bar. Small values, the dots move very quickly, Too big and the dots hardly move. handy for manual steering..
        /// </summary>
        public static string hc_nudLightbarCmPerPixel {
            get {
                return ResourceManager.GetString("hc_nudLightbarCmPerPixel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pixel Width of Lines Displayed
        ///
        ///How many pixels wide are the displayed lines. More pixels is wider displayed line. Valid from 1 to 8.
        /// </summary>
        public static string hc_nudLineWidth {
            get {
                return ResourceManager.GetString("hc_nudLineWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time to shut sections off before getting to the applied region. .
        /// </summary>
        public static string hc_nudLookAheadOff {
            get {
                return ResourceManager.GetString("hc_nudLookAheadOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time to turn on the section early before getting to the unapplied area. .
        /// </summary>
        public static string hc_nudLookAheadOn {
            get {
                return ResourceManager.GetString("hc_nudLookAheadOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lower Time
        ///
        ///How long in seconds the hydraulic control should remain on for lowering tool..
        /// </summary>
        public static string hc_nudLowerTime {
            get {
                return ResourceManager.GetString("hc_nudLowerTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steer Counts Trigger
        ///
        ///When this number of detections are made it will disable the auto steer.
        ///
        ///Depending on sensor used the value can be either turn counts, oil pressure in Bar, and current in Amps..
        /// </summary>
        public static string hc_nudMaxCounts {
            get {
                return ResourceManager.GetString("hc_nudMaxCounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minumum Coverage Percent
        ///
        ///Based on per section, how much of the area ahead needs application in order to turn on or off the section. 
        ///If set to 100, section never turns off until all area is applied. 
        ///If set to 50, if half the area is already applied ahead of section, the section will turn off. .
        /// </summary>
        public static string hc_nudMinCoverage {
            get {
                return ResourceManager.GetString("hc_nudMinCoverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step distance for Heading Calculation
        ///
        ///Heading is determined by taking 2 points and calculating an angle. The slower you go, the more variation side to side there is, more noise, etc make the heading quite unstable to just go from last point to current point. OK when going fast. AOG remembers several points back in time for this purpose. The Step Distance is how far back in that history of points do you want to use to calculate the heading.
        ///
        ///A long step distance provides quite a stable reading BUT there [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hc_nudMinFixStepDistance {
            get {
                return ResourceManager.GetString("hc_nudMinFixStepDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum Frame Time
        ///
        ///Set in milliseconds. If GPS is 10 hz then a single update takes 100 msec between new position updates. In this case the elapsed time would be zero since a new one arrives every 100 msec. 
        ///
        ///If you set it to 70 then the elapsed time would wait for another 70 msec - or 170 msec total - before a missed update would occur. These missed updates get counted and show up by the AGIO button on the left side. A few misses happen because windows is busy, or bringing up the Config settings becaus [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hc_nudMinimumFrameTime {
            get {
                return ResourceManager.GetString("hc_nudMinimumFrameTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tool Offset
        ///
        ///Positive value moves the tool to the right, negative value moves the tool left.
        /// </summary>
        public static string hc_nudOffset {
            get {
                return ResourceManager.GetString("hc_nudOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance Overlap or Gap
        ///
        ///Positive value indicates overlap, negative indicates gap. Tool width remains the same however the guidance lines are adjusted accordingly. .
        /// </summary>
        public static string hc_nudOverlap {
            get {
                return ResourceManager.GetString("hc_nudOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raise Time
        ///
        ///How long in seconds the hydraulic control should remain on for lifting tool..
        /// </summary>
        public static string hc_nudRaiseTime {
            get {
                return ResourceManager.GetString("hc_nudRaiseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverse Direction Compensation For Turns
        ///
        ///This is a difficult concept to describe, so there is a video about it on you tube called Reverse Compensation. But here goes in text.
        ///
        ///What you are doing is offsetting the effect that the antenna swings very quickly left or right when you initially turn the steering wheel. This tries to dampen that effect. It is very complex to eliminate.
        ///
        ///The effect is much greater in reverse because the antenna based on direction is behind the antenna. Think of a loader buck [rest of string was truncated]&quot;;.
        /// </summary>
        public static string hc_nudReverseComp {
            get {
                return ResourceManager.GetString("hc_nudReverseComp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Section Width Entry
        ///
        ///Enter the width of the section in cm/inches. All the section widths added together become the tool width..
        /// </summary>
        public static string hc_nudSectionWidth {
            get {
                return ResourceManager.GetString("hc_nudSectionWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nudge Distance
        ///
        ///Distance to move guidance line over, used in the Edit AB form.
        /// </summary>
        public static string hc_nudSnapDistance {
            get {
                return ResourceManager.GetString("hc_nudSnapDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Speed
        ///
        ///Speed to reach before using every position to calculate heading. Below this value you must travel about a meter before position and heading are updated on the screen.
        ///
        ///This is important when going slow, backing up and turning etc. to know where you are, the heading you are going, and whether or not you are in reverse. 
        ///
        ///A higher setting like at least 1.5 to 2 allows for a much more reliable determination of reverse and heading. .
        /// </summary>
        public static string hc_nudStartSpeed {
            get {
                return ResourceManager.GetString("hc_nudStartSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tram Width
        ///
        ///Usually the width of your sprayer, but is the width of the spacing between tramlines.
        /// </summary>
        public static string hc_nudTramWidth {
            get {
                return ResourceManager.GetString("hc_nudTramWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn Distance from Boundary
        ///
        ///Distance from apex of turn to the boundary. The closest distance the vehicle will pass by the boundary. Ensure vehicle and 1/2 tool width does not cross over boundary..
        /// </summary>
        public static string hc_nudTurnDistanceFromBoundary {
            get {
                return ResourceManager.GetString("hc_nudTurnDistanceFromBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time to keep sections going after applied area says they should turn off. .
        /// </summary>
        public static string hc_nudTurnOffDelay {
            get {
                return ResourceManager.GetString("hc_nudTurnOffDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings have Changed Graphic
        ///
        ///You have made a change on this settings page when this graphic shows up. Now be sure to save and send your changes - or nothing will happen and changes will be lost..
        /// </summary>
        public static string hc_pboxSendSteer {
            get {
                return ResourceManager.GetString("hc_pboxSendSteer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Units to Imperial.
        /// </summary>
        public static string hc_rbtnDisplayImperial {
            get {
                return ResourceManager.GetString("hc_rbtnDisplayImperial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Units to Metric.
        /// </summary>
        public static string hc_rbtnDisplayMetric {
            get {
                return ResourceManager.GetString("hc_rbtnDisplayMetric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix to Fix Heading Type.
        /// </summary>
        public static string hc_rbtnHeadingFix {
            get {
                return ResourceManager.GetString("hc_rbtnHeadingFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VTG Sentence Heading Type.
        /// </summary>
        public static string hc_rbtnHeadingGPS {
            get {
                return ResourceManager.GetString("hc_rbtnHeadingGPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dual Antenna Heading Type.
        /// </summary>
        public static string hc_rbtnHeadingHDT {
            get {
                return ResourceManager.GetString("hc_rbtnHeadingHDT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tram Tool positioning
        ///
        ///Select where the tool will end up when making a pass on the tram line. This is decided if you are odd or even number of passes of seeding to get to the next tram line. .
        /// </summary>
        public static string hc_rbtnTramInnerOuter {
            get {
                return ResourceManager.GetString("hc_rbtnTramInnerOuter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of new vehicle to be saved
        ///
        ///Enter the new vehicle name and touch the Save button.
        /// </summary>
        public static string hc_tboxVehicleNameSave {
            get {
                return ResourceManager.GetString("hc_tboxVehicleNameSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Point
        ///
        ///The start of the Curve Line. .
        /// </summary>
        public static string hcur_btnAPoint {
            get {
                return ResourceManager.GetString("hcur_btnAPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to B Point
        ///
        ///The end of the Curve Line..
        /// </summary>
        public static string hcur_btnBPoint {
            get {
                return ResourceManager.GetString("hcur_btnBPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause Rec
        ///
        ///Pause the creation of points, continue recording points if paused.
        ///
        ///This is really useful if you want a straighter line instead of recording all the points. The line between the pauses will be a straight line. 
        ///
        ///After saving the line, a small amount of smoothing is also applied. .
        /// </summary>
        public static string hcur_btnPausePlay {
            get {
                return ResourceManager.GetString("hcur_btnPausePlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel Touch Points
        ///
        ///Delete any points touched on the line and start again. 
        ///
        ///If you touch again after touching second point, it will start selecting the first point again..
        /// </summary>
        public static string hd_btnCancelTouch {
            get {
                return ResourceManager.GetString("hd_btnCancelTouch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete AB Line
        ///
        ///Delete the selected AB Line.
        /// </summary>
        public static string hd_btnDeleteABLine {
            get {
                return ResourceManager.GetString("hd_btnDeleteABLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Curve
        ///
        ///Delete the selected curve..
        /// </summary>
        public static string hd_btnDeleteCurve {
            get {
                return ResourceManager.GetString("hd_btnDeleteCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw Sections
        ///
        ///Draw the section mapping on the field background for reference..
        /// </summary>
        public static string hd_btnDrawSections {
            get {
                return ResourceManager.GetString("hd_btnDrawSections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flip Offset
        ///
        ///Flip the offset to the other side of line. Use before creating the curve.
        /// </summary>
        public static string hd_btnFlipOffset {
            get {
                return ResourceManager.GetString("hd_btnFlipOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make AB Line
        ///
        ///Once 2 points are selected, and distance from boundary set, make a new AB Line guidance line. You can edit the name in the textbox..
        /// </summary>
        public static string hd_btnMakeABLine {
            get {
                return ResourceManager.GetString("hd_btnMakeABLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make Boundary Contour
        ///
        ///Creates a guidance line around the whole field that is set in distance numeric entry. Usually is one half tool width away..
        /// </summary>
        public static string hd_btnMakeBoundaryCurve {
            get {
                return ResourceManager.GetString("hd_btnMakeBoundaryCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make Curve
        ///
        ///Once 2 points are selected, and distance from boundary set, make a new Curve guidance line. You can edit the name in the textbox..
        /// </summary>
        public static string hd_btnMakeCurve {
            get {
                return ResourceManager.GetString("hd_btnMakeCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select AB Line
        ///
        ///Keep touching to cycle thru the lines to select the one you want..
        /// </summary>
        public static string hd_btnSelectABLine {
            get {
                return ResourceManager.GetString("hd_btnSelectABLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Curve
        ///
        ///Keep touching to cycle thru the lines to select the one you want..
        /// </summary>
        public static string hd_btnSelectCurve {
            get {
                return ResourceManager.GetString("hd_btnSelectCurve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance From Boundary
        ///
        ///Enter the distance left or right from the line created by the 2 points. Defaults to 1 half the tool width..
        /// </summary>
        public static string hd_nudDistance {
            get {
                return ResourceManager.GetString("hd_nudDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boundary Display
        ///
        ///Touch 2 points on the boundary to make a line. Touch Create Curve or Create AB Line to make the line. Edit the name. .
        /// </summary>
        public static string hd_oglSelf {
            get {
                return ResourceManager.GetString("hd_oglSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Line
        ///
        ///Touch to edit the line to rename the default. .
        /// </summary>
        public static string hd_tboxNameLine {
            get {
                return ResourceManager.GetString("hd_tboxNameLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save For Now
        ///
        ///Line changes not saved with the field, they are lost when loading the field again. But the changes are in effect.
        /// </summary>
        public static string he_btnNoSave {
            get {
                return ResourceManager.GetString("he_btnNoSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and Exit
        ///
        ///Changes are saved with the field and exit the form. .
        /// </summary>
        public static string he_btnOK {
            get {
                return ResourceManager.GetString("he_btnOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Points on Line
        ///
        ///First select 2 points on the line to delete all the points for.
        ///
        ///Touch Delete Button.
        ///
        ///This removes all the points between the selected 2 points and makes a straight line. .
        /// </summary>
        public static string hh_btnDeletePoints {
            get {
                return ResourceManager.GetString("hh_btnDeletePoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit
        ///
        ///Exit the form and set the headland On..
        /// </summary>
        public static string hh_btnExit {
            get {
                return ResourceManager.GetString("hh_btnExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Distance to Headland
        ///
        ///Adds the distance entered in the numeric entry to the existing headland..
        /// </summary>
        public static string hh_btnMakeFixedHeadland {
            get {
                return ResourceManager.GetString("hh_btnMakeFixedHeadland", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Headland
        ///
        ///Puts the headland back to the boundary, resetting it to 0 distance..
        /// </summary>
        public static string hh_btnReset {
            get {
                return ResourceManager.GetString("hh_btnReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Distance
        ///
        ///Adds the distance set in the numeric to the line selected by the 2 points..
        /// </summary>
        public static string hh_btnSetDistance {
            get {
                return ResourceManager.GetString("hh_btnSetDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headland Off
        ///
        ///Shuts off the headland completely. .
        /// </summary>
        public static string hh_btnTurnOffHeadland {
            get {
                return ResourceManager.GetString("hh_btnTurnOffHeadland", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sections Control In Headland
        ///
        ///Enable of disable the turning off of sections within the headland..
        /// </summary>
        public static string hh_cboxIsSectionControlled {
            get {
                return ResourceManager.GetString("hh_cboxIsSectionControlled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tool Widths
        ///
        ///Use the pulldown to set how many tool widths in from the boundary you want the headland to be. 
        ///
        ///If you select it again, it will remove the previous headland and make the new one..
        /// </summary>
        public static string hh_cboxToolWidths {
            get {
                return ResourceManager.GetString("hh_cboxToolWidths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance Entry
        ///
        ///Distance entered will be added to the existing headland distance. Press the Enter Distance button to add it..
        /// </summary>
        public static string hh_nudDistance {
            get {
                return ResourceManager.GetString("hh_nudDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Distance Move
        ///
        ///Select 2 points on the headland line you want to move independently
        ///
        ///Enter the distance to move the segment - can be positive or negative..
        /// </summary>
        public static string hh_nudSetDistance {
            get {
                return ResourceManager.GetString("hh_nudSetDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Reference Half Tool Width
        ///
        ///Moves the reference line one half tool width left or right..
        /// </summary>
        public static string ht_btnAdjHalfToolWidth {
            get {
                return ResourceManager.GetString("ht_btnAdjHalfToolWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tram Off
        ///
        ///Cancel and delete everything. Turn the tram off.
        /// </summary>
        public static string ht_btnCancel {
            get {
                return ResourceManager.GetString("ht_btnCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nudge Reference Line
        ///
        ///Nudge reference line by amount shown.
        /// </summary>
        public static string ht_btnLeftRightNudge {
            get {
                return ResourceManager.GetString("ht_btnLeftRightNudge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and Exit
        ///
        ///Save and activate the Tram lines. Exit the setup form..
        /// </summary>
        public static string ht_btnSave {
            get {
                return ResourceManager.GetString("ht_btnSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swap A to B
        ///
        ///Swaps the order of the line so right is left. 
        ///
        ///This is important as tram lines are made on the right side of the line counting positive. .
        /// </summary>
        public static string ht_btnSwapAB {
            get {
                return ResourceManager.GetString("ht_btnSwapAB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tram Passes
        ///
        ///Enter the number of tram passes or use the up down arrows to change the number.
        /// </summary>
        public static string ht_nudPasses {
            get {
                return ResourceManager.GetString("ht_nudPasses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.youtube.com/watch?v=iN2cZ8avHag.
        /// </summary>
        public static string v_AboutIntro {
            get {
                return ResourceManager.GetString("v_AboutIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.youtube.com/watch?v=fE3TPRIRSFg.
        /// </summary>
        public static string v_RecordedPathForm {
            get {
                return ResourceManager.GetString("v_RecordedPathForm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://www.youtube.com/watch?v=3SdvYgx8HHc.
        /// </summary>
        public static string v_SteerSettingsForm {
            get {
                return ResourceManager.GetString("v_SteerSettingsForm", resourceCulture);
            }
        }
    }
}
