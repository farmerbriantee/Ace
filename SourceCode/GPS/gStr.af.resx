<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="gsABCurve" xml:space="preserve">
    <value>zAB Kurve</value>
  </data>
  <data name="gsABline" xml:space="preserve">
    <value>zAB Line</value>
  </data>
  <data name="gsAbout" xml:space="preserve">
    <value>zAbout...</value>
  </data>
  <data name="gsActionHasBeenCancelled" xml:space="preserve">
    <value>zAction Has Been Cancelled</value>
  </data>
  <data name="gsActual" xml:space="preserve">
    <value>zActual</value>
  </data>
  <data name="gsAgressiveness" xml:space="preserve">
    <value>zAgressiveness</value>
  </data>
  <data name="gsAreYouSure" xml:space="preserve">
    <value>zAre you sure ?</value>
  </data>
  <data name="gsArea" xml:space="preserve">
    <value>zArea</value>
  </data>
  <data name="gsAutoSteerConfiguration" xml:space="preserve">
    <value>zAuto Steer Configuration</value>
  </data>
  <data name="gsAutoSteerPort" xml:space="preserve">
    <value>zAutoSteer Port</value>
  </data>
  <data name="gsBasedOnField" xml:space="preserve">
    <value>zBased on Field:</value>
  </data>
  <data name="gsBoundary" xml:space="preserve">
    <value>zBoundary</value>
  </data>
  <data name="gsBoundaryLineFilesAreCorrupt" xml:space="preserve">
    <value>zBoundary Lines File Corrupt</value>
  </data>
  <data name="gsButFieldIsLoaded" xml:space="preserve">
    <value>zBut Field Is Loaded</value>
  </data>
  <data name="gsCentimeters" xml:space="preserve">
    <value>zCentimeter</value>
  </data>
  <data name="gsChooseADifferentField" xml:space="preserve">
    <value>zChoose a different field</value>
  </data>
  <data name="gsChooseADifferentName" xml:space="preserve">
    <value>zChoose a different name</value>
  </data>
  <data name="gsChooseBuildDifferentone" xml:space="preserve">
    <value>zChoose or Build a Different one</value>
  </data>
  <data name="gsCloseFieldFirst" xml:space="preserve">
    <value>zClose Field First</value>
  </data>
  <data name="gsColors" xml:space="preserve">
    <value>zColors</value>
  </data>
  <data name="gsCompletelyDeleteBoundary" xml:space="preserve">
    <value>zCompletely Delete Boundary</value>
  </data>
  <data name="gsContourFileIsCorrupt" xml:space="preserve">
    <value>zContour File Corrupt</value>
  </data>
  <data name="gsContourOn" xml:space="preserve">
    <value>zContour On</value>
  </data>
  <data name="gsCouldntGenerateValidPath" xml:space="preserve">
    <value>zNo Valid Path</value>
  </data>
  <data name="gsCreateABoundaryFirst" xml:space="preserve">
    <value>zCreate A Boundary First</value>
  </data>
  <data name="gsCreateNewField" xml:space="preserve">
    <value>zCreate New Field</value>
  </data>
  <data name="gsCurrent" xml:space="preserve">
    <value>zCurrent</value>
  </data>
  <data name="gsCurrentSensorValueLabel" xml:space="preserve">
    <value>zCurrent</value>
  </data>
  <data name="gsCurveLineFileIsCorrupt" xml:space="preserve">
    <value>zCurve Line File Corrupt</value>
  </data>
  <data name="gsCurveNotOn" xml:space="preserve">
    <value>zCurve Not ON</value>
  </data>
  <data name="gsDeleteAllContoursAndSections" xml:space="preserve">
    <value>zDelete All Sections And Contours</value>
  </data>
  <data name="gsDeleteAppliedArea" xml:space="preserve">
    <value>zDelete Applied Area</value>
  </data>
  <data name="gsDeleteContourPaths" xml:space="preserve">
    <value>zDelete Contour Paths</value>
  </data>
  <data name="gsDeleteForSure" xml:space="preserve">
    <value>zDelete For Sure?</value>
  </data>
  <data name="gsDirectories" xml:space="preserve">
    <value>zDirectories</value>
  </data>
  <data name="gsDirectoryExists" xml:space="preserve">
    <value>zDirectory Exists</value>
  </data>
  <data name="gsDriveThru" xml:space="preserve">
    <value>zDrive Thru</value>
  </data>
  <data name="gsDriving" xml:space="preserve">
    <value>zDriving</value>
  </data>
  <data name="gsEast" xml:space="preserve">
    <value>zEast</value>
  </data>
  <data name="gsEditABCurve" xml:space="preserve">
    <value>zEdit AB Curve</value>
  </data>
  <data name="gsEditABLine" xml:space="preserve">
    <value>zEdit AB Line</value>
  </data>
  <data name="gsEncoderCounts" xml:space="preserve">
    <value>zCounts</value>
  </data>
  <data name="gsEnterCoordinatesForSimulator" xml:space="preserve">
    <value>zEnter Coordinates For Simulator</value>
  </data>
  <data name="gsEnterFieldName" xml:space="preserve">
    <value>zEnter Field Name</value>
  </data>
  <data name="gsEnterSimCoords" xml:space="preserve">
    <value>zEnter Sim Coords</value>
  </data>
  <data name="gsError" xml:space="preserve">
    <value>zError</value>
  </data>
  <data name="gsErrorreadingKML" xml:space="preserve">
    <value>zError reading KML</value>
  </data>
  <data name="gsFieldFileIsCorrupt" xml:space="preserve">
    <value>zField File is Corrupt</value>
  </data>
  <data name="gsFieldIsOpen" xml:space="preserve">
    <value>zField Is Open</value>
  </data>
  <data name="gsFieldNotOpen" xml:space="preserve">
    <value>zField Not Open</value>
  </data>
  <data name="gsFileError" xml:space="preserve">
    <value>zFile Error</value>
  </data>
  <data name="gsFlagFileIsCorrupt" xml:space="preserve">
    <value>zFlag File Corrupt</value>
  </data>
  <data name="gsForNow" xml:space="preserve">
    <value>zFor Now</value>
  </data>
  <data name="gsHeadland" xml:space="preserve">
    <value>zHeadland</value>
  </data>
  <data name="gsHeadlandForm" xml:space="preserve">
    <value>zCreate and Edit Headland</value>
  </data>
  <data name="gsHelp" xml:space="preserve">
    <value>zHelp</value>
  </data>
  <data name="gsInches" xml:space="preserve">
    <value>zInch</value>
  </data>
  <data name="gsInner" xml:space="preserve">
    <value>zInner</value>
  </data>
  <data name="gsKMH" xml:space="preserve">
    <value>zkmh</value>
  </data>
  <data name="gsLanguage" xml:space="preserve">
    <value>zLanguage</value>
  </data>
  <data name="gsMPH" xml:space="preserve">
    <value>zmph</value>
  </data>
  <data name="gsMachinePort" xml:space="preserve">
    <value>zMachine Port</value>
  </data>
  <data name="gsMakeBoundaryContours" xml:space="preserve">
    <value>zMake Boundary Contours</value>
  </data>
  <data name="gsManual" xml:space="preserve">
    <value>zManual</value>
  </data>
  <data name="gsMeters" xml:space="preserve">
    <value>zMeters</value>
  </data>
  <data name="gsMissingABLinesFile" xml:space="preserve">
    <value>zMissing ABLInes File</value>
  </data>
  <data name="gsMissingBoundaryFile" xml:space="preserve">
    <value>zMissing Boundary File</value>
  </data>
  <data name="gsMissingContourFile" xml:space="preserve">
    <value>zMissing Contour File</value>
  </data>
  <data name="gsMissingFlagsFile" xml:space="preserve">
    <value>zMissing Flag File</value>
  </data>
  <data name="gsMissingSectionFile" xml:space="preserve">
    <value>zMissing Section File</value>
  </data>
  <data name="gsN_East" xml:space="preserve">
    <value>zNEast</value>
  </data>
  <data name="gsN_West" xml:space="preserve">
    <value>NWest</value>
  </data>
  <data name="gsNew" xml:space="preserve">
    <value>zNew</value>
  </data>
  <data name="gsNoABLineActive" xml:space="preserve">
    <value>zNo ABLine Active</value>
  </data>
  <data name="gsNoBoundary" xml:space="preserve">
    <value>zNo Boundary</value>
  </data>
  <data name="gsNoFieldsFound" xml:space="preserve">
    <value>zNo Fields Found</value>
  </data>
  <data name="gsNoGuidanceLines" xml:space="preserve">
    <value>zNo Guidance Lines</value>
  </data>
  <data name="gsNone" xml:space="preserve">
    <value>zNone</value>
  </data>
  <data name="gsNoneUsed" xml:space="preserve">
    <value>zNone Used</value>
  </data>
  <data name="gsNorth" xml:space="preserve">
    <value>zNorth</value>
  </data>
  <data name="gsNothingDeleted" xml:space="preserve">
    <value>zNothing Deleted</value>
  </data>
  <data name="gsOffset" xml:space="preserve">
    <value>zOffset</value>
  </data>
  <data name="gsOffsetFix" xml:space="preserve">
    <value>zOffset Fix</value>
  </data>
  <data name="gsOpen" xml:space="preserve">
    <value>zOpen</value>
  </data>
  <data name="gsOuter" xml:space="preserve">
    <value>zOuter</value>
  </data>
  <data name="gsOvershootReduction" xml:space="preserve">
    <value>zOvershoot Reduction</value>
  </data>
  <data name="gsPass" xml:space="preserve">
    <value>zPass #</value>
  </data>
  <data name="gsPasses" xml:space="preserve">
    <value>zPasses</value>
  </data>
  <data name="gsPause" xml:space="preserve">
    <value>zPause</value>
  </data>
  <data name="gsPleaseEnterABLine" xml:space="preserve">
    <value>zPlease Enter ABLine</value>
  </data>
  <data name="gsPressureSensorValueLabel" xml:space="preserve">
    <value>zPressure</value>
  </data>
  <data name="gsProblemMakingPath" xml:space="preserve">
    <value>zProblem Making Path</value>
  </data>
  <data name="gsProgramWillExitPleaseRestart" xml:space="preserve">
    <value>zProgram Will Exit Please Restart</value>
  </data>
  <data name="gsReallyResetEverything" xml:space="preserve">
    <value>zReally Reset Everything</value>
  </data>
  <data name="gsRecord" xml:space="preserve">
    <value>zRecord</value>
  </data>
  <data name="gsRecordedPathFileIsCorrupt" xml:space="preserve">
    <value>zRecorded Path File Corrupt</value>
  </data>
  <data name="gsResetAll" xml:space="preserve">
    <value>zReset All</value>
  </data>
  <data name="gsResetAllForSure" xml:space="preserve">
    <value>zReset All For Sure?</value>
  </data>
  <data name="gsResume" xml:space="preserve">
    <value>zResume</value>
  </data>
  <data name="gsS_East" xml:space="preserve">
    <value>zSE</value>
  </data>
  <data name="gsS_West" xml:space="preserve">
    <value>zSW</value>
  </data>
  <data name="gsSaveAndReturn" xml:space="preserve">
    <value>zSave and Return</value>
  </data>
  <data name="gsSaveAs" xml:space="preserve">
    <value>zSave As</value>
  </data>
  <data name="gsSentToMachineModule" xml:space="preserve">
    <value>zSent To Machine Module</value>
  </data>
  <data name="gsSetPoint" xml:space="preserve">
    <value>zSetPoint</value>
  </data>
  <data name="gsShiftGPSPosition" xml:space="preserve">
    <value>zShift GPS Position (cm)</value>
  </data>
  <data name="gsSimulatorOn" xml:space="preserve">
    <value>zSimulator On</value>
  </data>
  <data name="gsSmoothABCurve" xml:space="preserve">
    <value>zSmooth AB Curve</value>
  </data>
  <data name="gsSort" xml:space="preserve">
    <value>zSort</value>
  </data>
  <data name="gsSouth" xml:space="preserve">
    <value>zSouth</value>
  </data>
  <data name="gsSpacing" xml:space="preserve">
    <value>zSpacing (cm)</value>
  </data>
  <data name="gsStartDeleteABoundary" xml:space="preserve">
    <value>zStart or Delete A Boundary</value>
  </data>
  <data name="gsStartNewField" xml:space="preserve">
    <value>zStart New Field</value>
  </data>
  <data name="gsSteerChart" xml:space="preserve">
    <value>zCharts</value>
  </data>
  <data name="gsStopRecordPauseBoundary" xml:space="preserve">
    <value>zStop Record Pause Boundary</value>
  </data>
  <data name="gsToFile" xml:space="preserve">
    <value>zTo File</value>
  </data>
  <data name="gsTopFieldView" xml:space="preserve">
    <value>zTop Field View</value>
  </data>
  <data name="gsTramLines" xml:space="preserve">
    <value>zTram Lines</value>
  </data>
  <data name="gsTurnABCurveOn" xml:space="preserve">
    <value>zTurn AB Curve On</value>
  </data>
  <data name="gsTurnOnContourOrMakeABLine" xml:space="preserve">
    <value>zTurn On Contour of Make AB Line</value>
  </data>
  <data name="gsUseSelected" xml:space="preserve">
    <value>zUse Selected</value>
  </data>
  <data name="gsWebCam" xml:space="preserve">
    <value>zWebCam</value>
  </data>
  <data name="gsWest" xml:space="preserve">
    <value>zWest</value>
  </data>
  <data name="h_btn2D" xml:space="preserve">
    <value>Changed</value>
  </data>
</root>