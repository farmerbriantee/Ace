<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStripOpenGL.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>693, 15</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>372, 15</value>
  </metadata>
  <metadata name="tmrWatchdog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStripFlag.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>494, 14</value>
  </metadata>
  <metadata name="timerSim.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>250, 11</value>
  </metadata>
  <metadata name="oglBack.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="statusStripLeft.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>911, 16</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>156, 13</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>54</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AABMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBWliEPUpQdN0xwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAEuQFJRJjxHuU5QeDkxwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBPkhlASI4Q/0eODv9KkBOgTHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcAWZclBUmPEdlHjg//R44P/0eOEP9OkhdOTHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBLkRSNR44P/0eOD/9Hjg//R44P/0mPEeVTlB4OTHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcAUJMZP0iOEP9Hjg//R44P/0eOD/9Hjg//R44P/0qQ
        E6BMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAFmXJQVVkh5AR40PoUeOD/9Hjg//R44P/0eO
        D/9IjhCkTI4TaFGTGzxMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATJAVgUmNEH1JjRBHR44P/0eO
        D/9Hjg//R44P/0uMER1KjRCDSY8S3kxwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAFGUHBtIjxD3SI4P5E2M
        EidIjg/jSI4P/0eOD/9IjhDYTHBHAEiOD9lHjg//TZEWdkxwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcASpATqEeO
        D/9KjRCDTokTLU6PFh5MixJuTIsRcUuNEUVTkRwNSI4P90eOD/9JjxHzVJUeG0xwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAFGT
        GzxIjhD/R44P/0eOD/1Hjg/2S4wRSkiNEMRHjg//SI0PjkqMEShHjg//R44P/0eOD/9LkBSbTHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcASpATwEeOD/9Hjg//R44P/0eOD/9IjhDYSo0RVUeOD/9JjRCCS40RRUeOD/9Hjg//R44P/0iO
        EP9QkxouTHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAE6RF0xHjg//R44P/0eOD/9Hjg//R44P/0eOD/9IjRCnSY0QgkqNEGtKjRFaR44P/0eO
        D/9Hjg//R44P/0qPE7RMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcASY8Sz0eOD/9HkQ//R5IP/0eQD/9Hjg//R44P/0eOD/9IjQ+OV5EfAUqN
        EVpHjw//R5EP/0eSD/9HkA//R44P/1CTGThMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAE6SF05Hjw//RpMO/0ptE/9LXhT9R4wP/0ePD/9HkA//R44P/0eO
        D/9JjxBuSosRZUaRDv9IdxH/S1cU90eKD/9HkQ7/So8TtkxwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcASo8TxUaSDv9JbxL/UikZalYYGyVORBbFTUgW6keG
        EP9HkA//R44P/0eTD/9LXxT2TkUW5VI1GHJZCxwbTE4V10eMD/9IjxD/UJMaLkxwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAFCTGjNIjhD/R5IO/0lwEv9SKRlbTHBHAExw
        RwBXEBwySmkS/0eTD/9HkA//R4cQ/09AF5xMcEcATHBHAF0EHgFMThXVR40P/0ePD/9LkBSaTHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcAS5AUlEeOD/9Hjw//RpMP/0xV
        FPZXEBsYTHBHAExwRwBOSha1R4wP/0eUDv9KbBL/VBwbNExwRwBMcEcAUDUYiEeAEP9Hkg//R44P/0mP
        EetTkRwNTHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAFeRHwFJjxLcR48O/0eS
        D/9Gkw7/TFgUzExwRwBMcEcATHBHAFMlGXlIeBH/RpMP/01OFd1eAB4CTHBHAExwRwBSMRldSH0R/0aW
        Dv9HkQ//R44P/0yQFVBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcAU5QdNEiQ
        EP9Hig//SXYR/0pgE/9QMRhmTHBHAExwRwBUHBs0S10U+EeOD/9HkQ//SHsR/088F5pMcEcATHBHAFwQ
        HQxNSxXcSW8S/0eAEP9HkA//S5EUjUxwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMjxRYR5IP/0pxE/9VIRtTVhQcD0xwRwBMcEcATHBHAE89F5FHhxD/R5EP/0eOD/9GlQ7/S10T/1gO
        Gx5McEcATHBHAFkPHApYDhseTUQVyUaODv9LkRS6THBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAEuPE1xHkw//S28T/1kTHTlMcEcATHBHAExwRwBMcEcAT0AWmEeKD/9HkQ//R44P/0aV
        Dv9KYBP/VwwbI0xwRwBMcEcATHBHAExwRwBNPxbARo4O/0uRFMFMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcAT5IYSUeQD/9HhBD/S2UT+kxYFOZSLxhVTHBHAExwRwBTIhpESmYT/0aS
        D/9GlA7/R4MQ/05CFrVMcEcATHBHAFkPHApORha+S2IT8UlyEv9GkA7/TJEUpkxwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBRlBwbSI4Q+0eQD/9Gkw7/RpIP/0xXFM9dBB4BTHBHAExw
        RwBSLRlcTUwV30xVFPBQPRenVhQcD0xwRwBMcEcAUjIYYEh7Ef9Glg7/R5IP/0eOD/9LkBRxTHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBKjxLAR44P/0eOD/9GlQ7/S1wU/1YO
        HCVMcEcATHBHAExwRwBdBB4BWgAdCUxwRwBMcEcATHBHAExwRwBRPRiiR4cQ/0eRD/9Hjg//SI4Q/1CT
        GjNMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAE2RFl9Hjg//R5EP/0h4
        Ef9RNBh3THBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAFcQGxhMWRTmR48P/0eO
        Dv9KjxLATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAEqP
        E85Gkg7/SmkS/1QeGkxaCB0ETj4Xpk1JFrRUKBlJTHBHAExwRwBYHhocTzoXhE1KFs1UKBpLTHBHAE1E
        FclHig//SJAQ/1CTGT9McEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcAUJMaLkiQEPtGkQ7/SmIT9ExRFeRHhBD/R48P/0pfE/9TGxosTHBHAE9FFrJHgRD/Ro8P/0ls
        Ev9NSRbdR4MQ/0aRDv9MkRWITHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcAT5IYSUiQEP5GkA7/R48P/0eRD/9Hkw//SHsR/1IiGUtMcEcATVMU3EaU
        Dv9HkA//R5EP/0eOD/9HkQ7/SpATokxwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcAUJMZOEmPEtxHjg//R44P/0ePD/9HiQ//TFkU5k5R
        FtNKbxL/R5IP/0eOD/9Hjg//SI8Q/02RFn9McEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcAVZUhCEyQFXdJjxHkR44P/0eQ
        D/9Hkg7/R5IP/0eRDv9Hjg//SI4Q+0qQE6hQkhoxTHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAFaV
        IgpOkRc9TZEWdkuQFJpLjxOdTZEWik2RF1FOjxYeTHBHAExwRwBMcEcATHBHAExwRwBMcEcATHBHAExw
        RwBMcEcATHBHAExwRwBMcEcA//5////+P////D////gf///4D///8A///+AH///gB///wCP//8AB//+A
        Af//gAD//wAA//8AAH/+AAB//gAAP/wYGD/8DBgf+BwYH/gYGB/4OAwf+HgPH/gYGB/4DBgf/A54H/wf
        +D/+AYQ//gCAf/8AgP//gAH//8AD///wD/8=
</value>
  </data>
</root>